{"version":3,"sources":["AppMenuItemComponent.tsx","AppMenuItem.tsx","AppMenu.tsx","App.tsx","index.tsx"],"names":["AppMenuItemComponent","props","className","onClick","link","children","ListItem","button","component","forwardRef","ref","exact","innerRef","to","useStyles","PropTypes","string","isRequired","elementType","array","makeStyles","theme","createStyles","menuItem","background","color","menuItemIcon","AppMenuItem","name","Icon","items","classes","isExpandable","length","React","useState","open","setOpen","MenuItemRoot","ListItemIcon","ListItemText","primary","inset","MenuItemChildren","Collapse","in","timeout","unmountOnExit","Divider","List","disablePadding","map","item","index","key","appMenuItems","IconDashboard","IconPeople","appMenu","width","navList","AppMenu","savePageText","e","console","log","target","changeInput","PageContract1","id","onChange","PageContract2","PageContract3","PageDeclaration1","PageDeclaration2","PageDeclaration3","PagePartners","PageFTS","root","display","drawerPaper","position","whiteSpace","paddingTop","spacing","paddingBottom","content","flexGrow","height","overflow","container","App","clsx","CssBaseline","Drawer","variant","paper","Container","maxWidth","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.892cbeb7.chunk.js","sourcesContent":["import React, { forwardRef } from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport { NavLink, NavLinkProps } from 'react-router-dom'\n\nexport interface AppMenuItemComponentProps {\n  className?: string\n  link?: string | null // because the InferProps props allows alows null value\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst AppMenuItemComponent: React.FC<AppMenuItemComponentProps> = props => {\n  const { className, onClick, link, children } = props\n\n  // If link is not set return the orinary ListItem\n  if (!link || typeof link !== 'string') {\n    return (\n      <ListItem\n        button\n        className={className}\n        children={children}\n        onClick={onClick}\n      />\n    )\n  }\n\n  // Return a LitItem with a link component\n  return (\n    <ListItem\n      button\n      className={className}\n      children={children}\n      component={forwardRef((props: NavLinkProps, ref: any) => <NavLink exact {...props} innerRef={ref} />)}\n      to={link}\n    />\n  )\n}\n\nexport default AppMenuItemComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport List from '@material-ui/core/List'\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\n\nimport AppMenuItemComponent from './AppMenuItemComponent'\n\n// React runtime PropTypes\nexport const AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array,\n}\n\n// TypeScript compile-time props type, infered from propTypes\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\ntype AppMenuItemPropTypes = PropTypes.InferProps<typeof AppMenuItemPropTypes>\ntype AppMenuItemPropsWithoutItems = Omit<AppMenuItemPropTypes, 'items'>\n\n// Improve child items declaration\nexport type AppMenuItemProps = AppMenuItemPropsWithoutItems & {\n  items?: AppMenuItemProps[]\n}\n\nconst AppMenuItem: React.FC<AppMenuItemProps> = props => {\n  const { name, link, Icon, items = [] } = props\n  const classes = useStyles()\n  const isExpandable = items && items.length > 0\n  const [open, setOpen] = React.useState(false)\n\n  function handleClick() {\n    setOpen(!open)\n  }\n\n  const MenuItemRoot = (\n    <AppMenuItemComponent className={classes.menuItem} link={link} onClick={handleClick}>\n      {/* Display an icon if any */}\n      {!!Icon && (\n        <ListItemIcon className={classes.menuItemIcon}>\n          <Icon />\n        </ListItemIcon>\n      )}\n      <ListItemText primary={name} inset={!Icon} />\n      {/* Display the expand menu if the item has children */}\n      {isExpandable && !open && <IconExpandMore />}\n      {isExpandable && open && <IconExpandLess />}\n    </AppMenuItemComponent>\n  )\n\n  const MenuItemChildren = isExpandable ? (\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      <Divider />\n      <List component=\"div\" disablePadding>\n        {items.map((item, index) => (\n          <AppMenuItem {...item} key={index} />\n        ))}\n      </List>\n    </Collapse>\n  ) : null\n\n  return (\n    <>\n      {MenuItemRoot}\n      {MenuItemChildren}\n    </>\n  )\n}\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    menuItem: {\n      '&.active': {\n        background: 'rgba(0, 0, 0, 0.08)',\n        '& .MuiListItemIcon-root': {\n          color: '#fff',\n        },\n      },\n    },\n    menuItemIcon: {\n      color: '#97c05c',\n    },\n  }),\n)\n\nexport default AppMenuItem\n","import React from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nimport List from '@material-ui/core/List'\n\nimport IconDashboard from '@material-ui/icons/Dashboard'\nimport IconPeople from '@material-ui/icons/People'\n\nimport AppMenuItem from './AppMenuItem'\n\nconst appMenuItems = [\n  {\n    name: 'Документы',\n    Icon: IconDashboard,\n    items: [\n      {\n        name: 'Договоры',\n        items: [\n          {\n            name: 'Договор 1',\n            link: '/contract1'\n          },\n          {\n            name: 'Договор 2',\n            link: '/contract2'\n          },\n          {\n            name: 'Договор 3',\n            link: '/contract3'\n          }\n        ],\n      },\n      {\n        name: 'Декларации',\n        items: [\n          {\n            name: 'Декларация 1',\n            link: '/declaration1'\n          },\n          {\n            name: 'Декларация 2',\n            link: '/declaration2'\n          },\n          {\n            name: 'Декларация 3',\n            link: '/declaration3'\n          }\n        ],\n      },\n    ],\n  },\n  {\n    name: 'Переписка',\n    Icon: IconPeople,\n    items: [\n      {\n        name: 'Партнеры',\n        link: '/partners'\n      },\n      {\n        name: 'ФНС',\n        link: '/fts'\n      }\n    ],\n  }\n]\n\nconst AppMenu: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <List component=\"nav\" className={classes.appMenu} disablePadding>\n      {appMenuItems.map((item, index) => (\n        <AppMenuItem {...item} key={index} />\n      ))}\n    </List>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme =>\n  createStyles({\n    appMenu: {\n      width: '100%',\n    },\n    navList: {\n      width: drawerWidth,\n    },\n    menuItem: {\n      width: drawerWidth,\n    },\n    menuItemIcon: {\n      color: '#97c05c',\n    },\n  }),\n)\n\nexport default AppMenu\n","import React, {ChangeEvent} from 'react'\nimport clsx from 'clsx'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport Container from '@material-ui/core/Container'\n\nimport AppMenu from './AppMenu'\n\nlet contract1Text = '';\nlet contract2Text = '';\nlet contract3Text = '';\n\nfunction savePageText(e: React.MouseEvent) {\n  console.log(e.target);\n}\n\nfunction changeInput(e: ChangeEvent<HTMLInputElement>) {\n\n}\n\nconst PageContract1 = () => <div><input id=\"contract-1\" onChange={changeInput}/><button id=\"contract-1-button\" onClick={savePageText}>Сохранить</button></div>\nconst PageContract2 = () => <div><input id=\"contract-2\" /><button id=\"contract-2-button\" onClick={savePageText}>Сохранить</button></div>\nconst PageContract3 = () => <div><input id=\"contract-3\" /><button id=\"contract-3-button\" onClick={savePageText}>Сохранить</button></div>\n\nconst PageDeclaration1 = () => <div><input id=\"declaration-1\" /><button id=\"declaration-1-button\" onClick={savePageText}>Сохранить</button></div>\nconst PageDeclaration2 = () => <div><input id=\"declaration-2\" /><button id=\"declaration-2-button\" onClick={savePageText}>Сохранить</button></div>\nconst PageDeclaration3 = () => <div><input id=\"declaration-3\" /><button id=\"declaration-3-button\" onClick={savePageText}>Сохранить</button></div>\n\nconst PagePartners = () => <div><input id=\"partners\" /><button id=\"partners-button\" onClick={savePageText}>Сохранить</button></div>\nconst PageFTS = () => <div><input id=\"fts\" /><button id=\"fts-button\" onClick={savePageText}>Сохранить</button></div>\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n\n  return (\n    <BrowserRouter>\n      <div className={clsx('App', classes.root)}>\n        <CssBaseline />\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <AppMenu />\n        </Drawer>\n        <main className={classes.content}>\n          <Container maxWidth=\"lg\" className={classes.container}>\n\n            <Switch>\n              <Route path=\"/contract1\" component={PageContract1} />\n              <Route path=\"/contract2\" component={PageContract2} />\n              <Route path=\"/contract3\" component={PageContract3} />\n\n              <Route path=\"/declaration1\" component={PageDeclaration1} />\n              <Route path=\"/declaration2\" component={PageDeclaration2} />\n              <Route path=\"/declaration3\" component={PageDeclaration3} />\n\n              <Route path=\"/partners\" component={PagePartners} />\n              <Route path=\"/fts\" component={PageFTS} />\n            </Switch>\n\n          </Container>\n        </main>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    background: '#535454',\n    color: '#fff',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}))\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}